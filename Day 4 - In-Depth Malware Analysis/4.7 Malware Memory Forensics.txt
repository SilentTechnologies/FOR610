Software for capturing memory
	WinPMEM
	Comae Memory Toolkit (DumpIt)
	KnTDD
	BelkaSoft Live RAM Capturer

Volitility Framework
	using module kdbgscan
		vol.py -f <file>.vmem kdbgscan | more
		vol.py -f <file>.vmem --profile=<Win10_###> pslist or pstree

compare clean memory v infected memory
	VolDiff.py 

export VOLATILITY_PROFILE=Win10x86
vol.py -f <file>.vmem cmdline - shows parameters as well

always better to extract virtual memory of a process
	vol.py <name>.vmem memdump -p(process) 872 -D(dump) /<outputlocation>
	strings /<file>.dmp | grep -B3 -A3 <file>.bat

loop to delete a file
@echo off
del <file.exe>
if exist <file.exe> goto d
del /F "<file.bat>"
FILE0

Virtual Address Desciptor (VAD) - used to keep track of how virtual memory is allocated in repsonse to API calls - maps virtual to physical

vol.py -f <file>.vmem malfind -D /<outputdirectory> > <output>.txt

apihooks (SLOW) plugin

vol.py -f <file>.vmem apihooks -p <file> --skip-kernel >apihooks.txt

there is also valdump - which extracts all virtual memory addresses
	vol.py -f <file>.vmem vadump -p ### -D /<outputdirectory>

use malfind to check the virtual offset

vol.py <file>.vmem impscan -p ## -b 0x<memaddr> --output=idc > <name>.idc
	-edit file 
		add in 
			#include <idc.idc>
			static main(void){
			<rest of code>
			}

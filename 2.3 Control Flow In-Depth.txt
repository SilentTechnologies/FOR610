General Form
if (condition) {
	first code block
} else {
	second code block
}

in assembly
MOV EAX, var1
CMP EAX, 0xBAADF00D
JNE block2

block1:
	first code block
	JMP end
block2:
	second code block
end:
	continue here after if

strings (view/subviews/{shift F12})
	will only show ascii by default - rightclick/setup to add extra

IDA represents data using dd prefix
	offset = address
	dd offset = memory addresses of data

function (press N) to name
dashed arrow can indicate a loop eg:
	encrypting/decrypting network traffic: loop over each character in the string to send
	Attempt to connect to C2 servers: Loop over list of servers
	Perform a port scan: try to connect to ports 1-65535
	Perform a DDoS attack: keep sending malicious packets
	Log keystrokes: check state for each key code 0..92

LOOP - if ECX is not zero, LOOPNZ - if zero flag not set + ECX is not zero
ECX is automatically decremented

components of Loops:
	Control variable - variables used to determine if the loop exits
	Loop Initialisation - starting value of loop control variable is assigned
	Loop Body - code block to execute
	Loop update - instructions to modify the control variable on each loop
	Stopping condition - determine if a loop should exit

for(initialisation; stopping conditon; update) {
	code block
}

start:
	mov eax, 0
checkifstop
	cmp eax, 5
	jnl end
block1
	first block

	add eax, 1
	jump checkifstop
end
	continue here after loop

Conditionals
if ((a<4) && (a>1)) {
	code block
}
	CMP EAX, 4
	JNL END
	CMP EAX, 1
	JNG END
	BLOCK1:
		code block
	END

or
if ((a<4) || a>10) {
	code block
}

CMP EAX, 4
JL BLOCK1
CMP EAX, 10
JNG END
BLOCK1
	code block
END